# Production Environment Variables for UniNotesHub
# Copy this file to .env.prod.local and fill in the actual values
# DO NOT commit .env.prod.local to git - it contains sensitive data

# ==============================================================================
# REQUIRED VARIABLES - You MUST set these for production
# ==============================================================================

# Database Configuration
POSTGRES_USER=postgres
POSTGRES_DB=uninoteshub
POSTGRES_PASSWORD=your-secure-password-here-minimum-20-characters

# JWT Security (CRITICAL - Use a strong random key)
JWT_SECRET=your-very-secure-jwt-secret-key-here-make-it-long-and-random-minimum-64-chars

# CORS Configuration (Update with your actual domain)
CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# Email Configuration - FROM address (must match your domain/SES verified email)
EMAIL_FROM=noreply@yourdomain.com

# ==============================================================================
# EMAIL PROVIDER - Choose one: "smtp" or "ses"
# ==============================================================================
EMAIL_PROVIDER=smtp

# SMTP Configuration (if using EMAIL_PROVIDER=smtp)
EMAIL_SMTP_HOST=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password-here
EMAIL_USE_TLS=true

# AWS SES Configuration (if using EMAIL_PROVIDER=ses)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-aws-access-key-id
# AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
# SES_REGION=us-east-1
# SES_FROM_EMAIL=noreply@yourdomain.com

# ==============================================================================
# STORAGE PROVIDER - MinIO (local) or AWS S3
# ==============================================================================

# MinIO Configuration (for local/self-hosted storage)
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=your-secure-minio-password-minimum-12-chars
S3_ENDPOINT=http://minio:9000
S3_BUCKET=uninoteshub-files
S3_ACCESS_KEY=${MINIO_ROOT_USER}
S3_SECRET_KEY=${MINIO_ROOT_PASSWORD}
S3_REGION=us-east-1

# AWS S3 Configuration (uncomment and use for production)
# S3_ENDPOINT=  # Leave empty for AWS S3
# S3_BUCKET=your-s3-bucket-name
# S3_ACCESS_KEY=your-aws-access-key-id
# S3_SECRET_KEY=your-aws-secret-access-key
# S3_REGION=us-east-1

# ==============================================================================
# OPTIONAL CONFIGURATION - Defaults are usually fine
# ==============================================================================

# JWT Token Expiry
JWT_ACCESS_TTL=900  # 15 minutes
JWT_REFRESH_TTL=604800  # 7 days

# File Upload Configuration
MAX_FILE_SIZE=20971520  # 20MB in bytes
ALLOWED_FILE_TYPES=application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document

# Rate Limiting
RATE_LIMIT_LOGIN_ATTEMPTS=5
RATE_LIMIT_LOGIN_WINDOW=900  # 15 minutes
RATE_LIMIT_UPLOAD_PER_HOUR=10
RATE_LIMIT_DOWNLOAD_PER_HOUR=100

# Admin Configuration
ADMIN_EMAIL=admin@yourdomain.com

# Monitoring (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project

# ==============================================================================
# INSTRUCTIONS
# ==============================================================================
# 1. Copy this file: cp .env.prod .env.prod.local
# 2. Edit .env.prod.local with your actual values
# 3. Deploy: docker-compose -f docker-compose.prod.yml --env-file .env.prod.local up -d
# 4. Run migrations: docker-compose -f docker-compose.prod.yml exec backend alembic upgrade head
# 5. Create admin user: Follow instructions in DEPLOYMENT.md
